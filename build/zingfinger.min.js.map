{"version":3,"file":"zingfinger.min.js","sources":["../src/core/zingfinger.js"],"sourcesContent":["//利用勾股定理公式就可以很容易的计算出斜边的长度，也就是手指触点之间的直线距离\nconst getLen = (v) => {\n  return Math.sqrt(v.x * v.x + v.y * v.y);\n};\n\nconst dot = (v1, v2) => {\n  return v1.x * v2.x + v1.y * v2.y;\n};\n\n// 计算弧度\nconst getAngle = (v1, v2) => {\n  let mr = getLen(v1) * getLen(v2);\n  if (mr === 0) return 0;\n  let r = dot(v1, v2) / mr;\n  if (r > 1) r = 1;\n  return Math.acos(r);\n};\n\n//利用cross结果的正负来判断旋转的方向,如果值大于0，表示方向是逆时针，值小于0，表示方向顺时针\nconst cross = (v1, v2) => {\n  return v1.x * v2.y - v2.x * v1.y;\n};\n\n//利用数学向量求出旋转角度\nconst getRotateAngle = (v1, v2) => {\n  let angle = getAngle(v1, v2);\n  if (cross(v1, v2) > 0) {\n    angle *= -1;\n  }\n  return (angle * 180) / Math.PI;\n};\n\nconst getOffset = (el) => {\n  let rect = el.getBoundingClientRect();\n  let offset = {\n    left: rect.left + document.body.scrollLeft,\n    top: rect.top + document.body.scrollTop,\n    width: el.offsetWidth,\n    height: el.offsetHeight,\n  };\n  return offset;\n};\n\nconst getMidpoint = (el) => {\n  if (!el) return { x: 0, y: 0 };\n  let offset = getOffset(el);\n  let x = offset.left + el.getBoundingClientRect().width / 2,\n    y = offset.top + el.getBoundingClientRect().width / 2;\n  return { x: Math.round(x), y: Math.round(y) };\n};\n\nclass HandlerAdmin {\n  constructor(el) {\n    this.handlers = [];\n    this.el = el;\n  }\n\n  add(handler) {\n    this.handlers.push(handler);\n  }\n\n  del(handler) {\n    if (!handler) this.handlers = [];\n\n    for (let i = this.handlers.length; i >= 0; i--) {\n      if (this.handlers[i] === handler) {\n        this.handlers.splice(i, 1);\n      }\n    }\n  }\n\n  dispatch() {\n    for (let i = 0, len = this.handlers.length; i < len; i++) {\n      let handler = this.handlers[i];\n      if (typeof handler === \"function\") handler.apply(this.el, arguments);\n    }\n  }\n}\n\nconst wrapEl = (el) => {\n  return typeof el == \"string\" ? document.querySelector(el) : el;\n};\nconst wrapFunc = (el, handler) => {\n  const handlerAdmin = new HandlerAdmin(el);\n  handlerAdmin.add(handler);\n\n  return handlerAdmin;\n};\n\nconst isDescendant = (parent, child) => {\n  let node = child.parentNode;\n  while (node != null) {\n    if (node == parent) {\n      return true;\n    }\n    node = node.parentNode;\n  }\n  return false;\n};\n\nexport default class ZingFinger {\n  //option是个数据对象，包含了所有的操作回调函数\n  constructor(el, option, handleEl) {\n    this.element = wrapEl(el);\n    this.handleEl = wrapEl(handleEl);\n    this.start = this.start.bind(this);\n    this.move = this.move.bind(this);\n    this.end = this.end.bind(this);\n    this.cancel = this.cancel.bind(this);\n    //监听touch事件\n    this.element.addEventListener(\"touchstart\", this.start, false);\n    this.element.addEventListener(\"touchmove\", this.move, false);\n    this.element.addEventListener(\"touchend\", this.end, false);\n    this.element.addEventListener(\"touchcancel\", this.cancel, false);\n\n    //存储两个手指触摸点的位置的间距，水平间距和垂直间距\n    this.preV = { x: null, y: null };\n    //存储多指触摸操作时，手指触点位置之间的距离\n    this.pinchStartLen = null;\n    this.zoom = 1;\n    this.isDoubleTap = false;\n\n    let noop = function () {};\n\n    //旋转操作（多指旋转操作）\n    this.rotate = wrapFunc(this.element, option.rotate || noop);\n    //旋转操作 (单指)\n    this.singleRotate = wrapFunc(this.handleEl, option.singleRotate || noop);\n    //手指触摸开始\n    this.touchStart = wrapFunc(this.element, option.touchStart || noop);\n    //多指触摸开始\n    this.multipointStart = wrapFunc(\n      this.element,\n      option.multipointStart || noop\n    );\n    //多指触摸结束\n    this.multipointEnd = wrapFunc(this.element, option.multipointEnd || noop);\n    //捏（缩放操作）\n    this.pinch = wrapFunc(this.element, option.pinch || noop);\n    //单指缩放操作\n    this.singlePinch = wrapFunc(this.handleEl, option.singlePinch || noop);\n    //手指划过操作（兼容单个手指操作，多个手指操作）\n    this.swipe = wrapFunc(this.element, option.swipe || noop);\n    //点击操作\n    this.tap = wrapFunc(this.element, option.tap || noop);\n    //双击操作\n    this.doubleTap = wrapFunc(this.element, option.doubleTap || noop);\n    //长按操作\n    this.longTap = wrapFunc(this.element, option.longTap || noop);\n    //点击操作\n    //tap操作和singleTap操作的区别在于，如果是在一定时间内只是单击一次的话，触发的操作顺序是tap->singleTap\n    //singleTap操作其实就类似于鼠标click事件，click事件作用到移动端页面的时候，会存在延时触发事件，会先触发touch事件再执行click事件\n    this.singleTap = wrapFunc(this.element, option.singleTap || noop);\n    //单个手指触摸滑动操作\n    this.pressMove = wrapFunc(this.element, option.pressMove || noop);\n    //两个手指触摸滑动操作\n    this.twoFingerPressMove = wrapFunc(\n      this.element,\n      option.twoFingerPressMove || noop\n    );\n    //触摸滑动\n    this.touchMove = wrapFunc(this.element, option.touchMove || noop);\n    //触摸结束，手指触点离开屏幕\n    this.touchEnd = wrapFunc(this.element, option.touchEnd || noop);\n    //系统原因中断手势操作\n    this.touchCancel = wrapFunc(this.element, option.touchCancel || noop);\n\n    this._cancelAllHandler = this.cancelAll.bind(this);\n\n    window.addEventListener(\"scroll\", this._cancelAllHandler);\n\n    //手指连续按下触摸操作之间的时间间隔\n    this.delta = null;\n    //手指最近一次按下触摸操作时的时间戳\n    this.last = null;\n    //手指按下触摸操作的时间戳\n    this.now = null;\n    //接收点击操作时的定时器返回的值，用于清除定时器\n    this.tapTimeout = null;\n    //接收点击操作时的定时器返回的值，用于清除定时器\n    this.singleTapTimeout = null;\n    //接收长按操作时的定时器返回的值，用于清除定时器\n    this.longTapTimeout = null;\n    this.swipeTimeout = null;\n    this.x1 = this.x2 = this.y1 = this.y2 = null;\n    //用于存储手指触摸操作时的水平坐标和垂直坐标（如果是多指触摸操作，则记录的是第一个手指触摸的位置）\n    this.preTapPosition = { x: null, y: null };\n  }\n\n  start(evt) {\n    if (!evt.touches) return;\n    this.now = Date.now();\n    //存储手指触点相对于HTML文档左边沿的的X坐标\n    this.x1 = evt.touches[0].pageX;\n    //存储手指触点相对于HTML文档上边沿的的Y坐标\n    this.y1 = evt.touches[0].pageY;\n    //计算出手指连续按下触摸操作之间的时间间隔\n    this.delta = this.now - (this.last || this.now);\n    this.touchStart.dispatch(evt, this.element);\n    if (this.preTapPosition.x !== null) {\n      //如果手指连续触摸操作之间的时间间隔小于250毫秒，且手指连续触摸操作之间的触点位置水平坐标小于30，\n      //垂直坐标小于30，那么就判定该操作为双击操作\n      this.isDoubleTap =\n        this.delta > 0 &&\n        this.delta <= 250 &&\n        Math.abs(this.preTapPosition.x - this.x1) < 30 &&\n        Math.abs(this.preTapPosition.y - this.y1) < 30;\n      if (this.isDoubleTap) clearTimeout(this.singleTapTimeout);\n    }\n    this.preTapPosition.x = this.x1;\n    this.preTapPosition.y = this.y1;\n    this.last = this.now;\n\n    //获取触摸点的数量\n    let preV = this.preV,\n      len = evt.touches.length;\n    if (len > 1) {\n      this._cancelLongTap();\n      this._cancelSingleTap();\n      //如果是多手指操作的，计算出手指触摸点的位置的间距，水平间距和垂直间距\n      let v = {\n        x: evt.touches[1].pageX - this.x1,\n        y: evt.touches[1].pageY - this.y1,\n      };\n      preV.x = v.x;\n      preV.y = v.y;\n\n      //存储手指触点间的直线距离\n      this.pinchStartLen = getLen(preV);\n      this.multipointStart.dispatch(evt, this.element);\n    }\n    //判断操作是单击还是长按，true为长按操作，false为单击操作\n    this._preventTap = false;\n    //长按时的操作，长按时间750毫秒才会执行\n    this.longTapTimeout = setTimeout(\n      function () {\n        this.longTap.dispatch(evt, this.element);\n        this._preventTap = true;\n      }.bind(this),\n      750\n    );\n  }\n\n  move(evt) {\n    if (!evt.touches) return;\n    let preV = this.preV,\n      len = evt.touches.length,\n      currentX = evt.touches[0].pageX,\n      currentY = evt.touches[0].pageY;\n    //手指滑动的时候，就可以判定当前的操作不是双击了，所以把双击操作的状态设为false\n    this.isDoubleTap = false;\n    //多个手指操作\n    if (len > 1) {\n      let sCurrentX = evt.touches[1].pageX,\n        sCurrentY = evt.touches[1].pageY;\n      let v = {\n        x: evt.touches[1].pageX - currentX,\n        y: evt.touches[1].pageY - currentY,\n      };\n      //多指操作时，且触摸点位置的间距存在，也就是preV.x或者preV.y存在的时候才能执行pinch操作，这个判断条件必须存在\n      //（因为可能存在当多个手指触摸屏幕时，那么存在多个触摸点，但是在滑动操作的同时，只保留了一个手指触摸点，其他手指移开屏幕这样的情况，这种情况就不能执行pinch操作\n      if (preV.x !== null) {\n        if (this.pinchStartLen > 0) {\n          //计算出缩放比例（当前手指触摸点的直线距离 / 上一次滑动之前的手指触摸点的直线距离）\n          // console.log(this.pinchStartLen);\n          evt.zoom = getLen(v) / this.pinchStartLen;\n          this.pinch.dispatch(evt, this.element);\n        }\n        //旋转手势操作\n        evt.angle = getRotateAngle(v, preV);\n        this.rotate.dispatch(evt, this.element);\n      }\n      preV.x = v.x;\n      preV.y = v.y;\n\n      if (this.x2 !== null && this.sx2 !== null) {\n        evt.deltaX = (currentX - this.x2 + sCurrentX - this.sx2) / 2;\n        evt.deltaY = (currentY - this.y2 + sCurrentY - this.sy2) / 2;\n      } else {\n        evt.deltaX = 0;\n        evt.deltaY = 0;\n      }\n      this.twoFingerPressMove.dispatch(evt, this.element);\n\n      //存储在移动操作时第二个手指的X坐标位置\n      this.sx2 = sCurrentX;\n      //存储在移动操作时第二个手指的Y坐标位置\n      this.sy2 = sCurrentY;\n    } else {\n      if (this.x2 !== null) {\n        evt.deltaX = currentX - this.x2;\n        evt.deltaY = currentY - this.y2;\n\n        //move事件中添加对当前触摸点到初始触摸点的判断，\n        //如果曾经大于过某个距离(比如10),就认为是移动到某个地方又移回来，应该不再触发tap事件才对。\n        let movedX = Math.abs(this.x1 - this.x2),\n          movedY = Math.abs(this.y1 - this.y2);\n\n        if (movedX > 10 || movedY > 10) {\n          this._preventTap = true;\n        }\n      } else {\n        evt.deltaX = 0;\n        evt.deltaY = 0;\n      }\n\n      this.pressMove.dispatch(evt, this.element);\n      // 判断是否有handleElement\n      if (\n        this.handleEl &&\n        isDescendant(this.element, this.handleEl) &&\n        this.handleEl.dataset.single == \"true\" &&\n        evt.target == this.handleEl\n      ) {\n        const basePoint = getMidpoint(this.element);\n\n        const startV = {\n          x: this.handleEl.offsetLeft - this.handleEl.offsetWidth / 4,\n          y: this.handleEl.offsetTop - this.handleEl.offsetHeight / 4,\n        };\n\n        const rectV = {\n          x: currentX - startV.x,\n          y: currentY - startV.y,\n        };\n        preV = {\n          x: rectV.x - this.x1,\n          y: rectV.y - this.y1,\n        };\n\n        this.pinchStartLen = getLen(preV);\n        evt.zoom = getLen(rectV) / this.pinchStartLen;\n        // 单指缩放\n        this.singlePinch.dispatch(evt, this.handleEl);\n\n        // 单指旋转\n        const rotateV2 = {\n          x: basePoint.x - currentX,\n          y: basePoint.y - currentY,\n        };\n\n        evt.angle = getRotateAngle(rotateV2, preV);\n        preV.x = rotateV2.x;\n        preV.y = rotateV2.y;\n        this.singleRotate.dispatch(evt, this.handleEl);\n        // 是否为在handleElement上，禁止touch与屏幕滑动的冲突\n        evt.preventDefault();\n      }\n    }\n\n    this.touchMove.dispatch(evt, this.element);\n\n    this._cancelLongTap();\n    this.x2 = currentX;\n    this.y2 = currentY;\n\n    if (len > 1) {\n      evt.preventDefault();\n    }\n  }\n\n  end(evt) {\n    if (!evt.changedTouches) return;\n    //清除长按操作的定时器，取消长按操作\n    this._cancelLongTap();\n    let self = this;\n    if (evt.touches.length < 2) {\n      this.multipointEnd.dispatch(evt, this.element);\n      this.sx2 = this.sy2 = null;\n    }\n\n    //swipe\n    //水平移动间距大于30或者垂直移动间距大于30，就判定为swipe操作\n    if (\n      (this.x2 && Math.abs(this.x1 - this.x2) > 30) ||\n      (this.y2 && Math.abs(this.y1 - this.y2) > 30)\n    ) {\n      evt.direction = this._swipeDirection(this.x1, this.x2, this.y1, this.y2);\n      this.swipeTimeout = setTimeout(function () {\n        self.swipe.dispatch(evt, self.element);\n      }, 0);\n    } else {\n      this.tapTimeout = setTimeout(function () {\n        if (!self._preventTap) {\n          self.tap.dispatch(evt, self.element);\n        }\n        // trigger double tap immediately\n        // 如果是双击操作的话，就执行\n        if (self.isDoubleTap) {\n          self.doubleTap.dispatch(evt, self.element);\n          self.isDoubleTap = false;\n        }\n      }, 0);\n\n      //如果不是双击操作，就会延时250毫秒执行singleTap操作，同时也会执行tap操作，执行顺序是tap->singleTap\n      if (!self.isDoubleTap) {\n        self.singleTapTimeout = setTimeout(function () {\n          self.singleTap.dispatch(evt, self.element);\n        }, 250);\n      }\n    }\n\n    this.touchEnd.dispatch(evt, this.element);\n\n    this.preV.x = 0;\n    this.preV.y = 0;\n    this.zoom = 1;\n    this.pinchStartLen = null;\n    this.x1 = this.x2 = this.y1 = this.y2 = null;\n  }\n  cancelAll() {\n    this._preventTap = true;\n    clearTimeout(this.singleTapTimeout);\n    clearTimeout(this.tapTimeout);\n    clearTimeout(this.longTapTimeout);\n    clearTimeout(this.swipeTimeout);\n  }\n  cancel(evt) {\n    this.cancelAll();\n    this.touchCancel.dispatch(evt, this.element);\n  }\n  _cancelLongTap() {\n    clearTimeout(this.longTapTimeout);\n  }\n  _cancelSingleTap() {\n    clearTimeout(this.singleTapTimeout);\n  }\n  //判定swipe滑动的方向\n  _swipeDirection(x1, x2, y1, y2) {\n    return Math.abs(x1 - x2) >= Math.abs(y1 - y2)\n      ? x1 - x2 > 0\n        ? \"Left\"\n        : \"Right\"\n      : y1 - y2 > 0\n      ? \"Up\"\n      : \"Down\";\n  }\n\n  on(evt, handler) {\n    if (this[evt]) {\n      this[evt].add(handler);\n    }\n  }\n\n  off(evt, handler) {\n    if (this[evt]) {\n      this[evt].del(handler);\n    }\n  }\n\n  destroy() {\n    //清除所有的定时器操作\n    if (this.singleTapTimeout) clearTimeout(this.singleTapTimeout);\n    if (this.tapTimeout) clearTimeout(this.tapTimeout);\n    if (this.longTapTimeout) clearTimeout(this.longTapTimeout);\n    if (this.swipeTimeout) clearTimeout(this.swipeTimeout);\n\n    //解绑所有的监听事件\n    this.element.removeEventListener(\"touchstart\", this.start);\n    this.element.removeEventListener(\"touchmove\", this.move);\n    this.element.removeEventListener(\"touchend\", this.end);\n    this.element.removeEventListener(\"touchcancel\", this.cancel);\n\n    //取消所有的订阅\n    this.rotate.del();\n    this.singleRotate.del();\n    this.touchStart.del();\n    this.multipointStart.del();\n    this.multipointEnd.del();\n    this.pinch.del();\n    ths.singlePinch.del();\n    this.swipe.del();\n    this.tap.del();\n    this.doubleTap.del();\n    this.longTap.del();\n    this.singleTap.del();\n    this.pressMove.del();\n    this.twoFingerPressMove.del();\n    this.touchMove.del();\n    this.touchEnd.del();\n    this.touchCancel.del();\n\n    //自空所有的数据\n    this.preV = this.pinchStartLen = this.zoom = this.isDoubleTap = this.delta = this.last = this.now = this.tapTimeout = this.singleTapTimeout = this.longTapTimeout = this.swipeTimeout = this.x1 = this.x2 = this.y1 = this.y2 = this.preTapPosition = this.rotate = this.singleRotate = this.touchStart = this.multipointStart = this.multipointEnd = this.pinch = this.singlePinch = this.swipe = this.tap = this.doubleTap = this.longTap = this.singleTap = this.pressMove = this.touchMove = this.touchEnd = this.touchCancel = this.twoFingerPressMove = null;\n\n    window.removeEventListener(\"scroll\", this._cancelAllHandler);\n    return null;\n  }\n}\n"],"names":["getLen","v","Math","sqrt","x","y","getRotateAngle","v1","v2","angle","mr","r","dot","acos","getAngle","cross","PI","getMidpoint","el","offset","rect","getBoundingClientRect","left","document","body","scrollLeft","top","scrollTop","offsetWidth","offsetHeight","getOffset","width","round","HandlerAdmin","handlers","handler","push","this","i","length","splice","len","apply","arguments","wrapEl","querySelector","wrapFunc","handlerAdmin","add","option","handleEl","element","start","bind","move","end","cancel","addEventListener","preV","pinchStartLen","zoom","isDoubleTap","noop","rotate","singleRotate","touchStart","multipointStart","multipointEnd","pinch","singlePinch","swipe","tap","doubleTap","longTap","singleTap","pressMove","twoFingerPressMove","touchMove","touchEnd","touchCancel","_cancelAllHandler","cancelAll","delta","last","now","tapTimeout","singleTapTimeout","longTapTimeout","swipeTimeout","x1","x2","y1","y2","preTapPosition","evt","touches","Date","pageX","pageY","dispatch","abs","clearTimeout","_cancelLongTap","_cancelSingleTap","_preventTap","setTimeout","currentX","currentY","sCurrentX","sCurrentY","sx2","deltaX","deltaY","sy2","movedX","movedY","parent","child","node","parentNode","isDescendant","dataset","single","target","basePoint","startV","offsetLeft","offsetTop","rectV","rotateV2","preventDefault","changedTouches","self","direction","_swipeDirection","del","removeEventListener"],"mappings":";;;;;;;;8gBACMA,EAAS,SAACC,UACPC,KAAKC,KAAKF,EAAEG,EAAIH,EAAEG,EAAIH,EAAEI,EAAIJ,EAAEI,IAsBjCC,EAAiB,SAACC,EAAIC,OACtBC,EAfW,SAACF,EAAIC,OAChBE,EAAKV,EAAOO,GAAMP,EAAOQ,MAClB,IAAPE,EAAU,OAAO,MACjBC,EARM,SAACJ,EAAIC,UACRD,EAAGH,EAAII,EAAGJ,EAAIG,EAAGF,EAAIG,EAAGH,EAOvBO,CAAIL,EAAIC,GAAME,SAClBC,EAAI,IAAGA,EAAI,GACRT,KAAKW,KAAKF,GAULG,CAASP,EAAIC,UANb,SAACD,EAAIC,UACVD,EAAGH,EAAII,EAAGH,EAAIG,EAAGJ,EAAIG,EAAGF,EAM3BU,CAAMR,EAAIC,GAAM,QACR,GAEI,IAARC,EAAeP,KAAKc,IAcxBC,EAAc,SAACC,OACdA,EAAI,OAASd,EAAG,EAAGC,EAAG,OACvBc,EAbY,SAACD,OACbE,EAAOF,EAAGG,oCAEND,EAAKE,KAAOC,SAASC,KAAKC,eAC3BL,EAAKM,IAAMH,SAASC,KAAKG,gBACvBT,EAAGU,mBACFV,EAAGW,cAOAC,CAAUZ,GACnBd,EAAIe,EAAOG,KAAOJ,EAAGG,wBAAwBU,MAAQ,EACvD1B,EAAIc,EAAOO,IAAMR,EAAGG,wBAAwBU,MAAQ,SAC7C3B,EAAGF,KAAK8B,MAAM5B,GAAIC,EAAGH,KAAK8B,MAAM3B,KAGrC4B,wBACQf,kBACLgB,iBACAhB,GAAKA,wCAGRiB,QACGD,SAASE,KAAKD,+BAGjBA,GACGA,IAASE,KAAKH,iBAEd,IAAII,EAAID,KAAKH,SAASK,OAAQD,GAAK,EAAGA,IACrCD,KAAKH,SAASI,KAAOH,QAClBD,SAASM,OAAOF,EAAG,0CAMvB,IAAIA,EAAI,EAAGG,EAAMJ,KAAKH,SAASK,OAAQD,EAAIG,EAAKH,IAAK,KACpDH,EAAUE,KAAKH,SAASI,GACL,mBAAZH,GAAwBA,EAAQO,MAAML,KAAKnB,GAAIyB,qBAK1DC,EAAS,SAAC1B,SACM,iBAANA,EAAiBK,SAASsB,cAAc3B,GAAMA,GAExD4B,EAAW,SAAC5B,EAAIiB,OACdY,EAAe,IAAId,EAAaf,YACzB8B,IAAIb,GAEVY,gCAgBK7B,EAAI+B,EAAQC,kBACjBC,QAAUP,EAAO1B,QACjBgC,SAAWN,EAAOM,QAClBE,MAAQf,KAAKe,MAAMC,KAAKhB,WACxBiB,KAAOjB,KAAKiB,KAAKD,KAAKhB,WACtBkB,IAAMlB,KAAKkB,IAAIF,KAAKhB,WACpBmB,OAASnB,KAAKmB,OAAOH,KAAKhB,WAE1Bc,QAAQM,iBAAiB,aAAcpB,KAAKe,OAAO,QACnDD,QAAQM,iBAAiB,YAAapB,KAAKiB,MAAM,QACjDH,QAAQM,iBAAiB,WAAYpB,KAAKkB,KAAK,QAC/CJ,QAAQM,iBAAiB,cAAepB,KAAKmB,QAAQ,QAGrDE,MAAStD,EAAG,KAAMC,EAAG,WAErBsD,cAAgB,UAChBC,KAAO,OACPC,aAAc,MAEfC,EAAO,kBAGNC,OAASjB,EAAST,KAAKc,QAASF,EAAOc,QAAUD,QAEjDE,aAAelB,EAAST,KAAKa,SAAUD,EAAOe,cAAgBF,QAE9DG,WAAanB,EAAST,KAAKc,QAASF,EAAOgB,YAAcH,QAEzDI,gBAAkBpB,EACrBT,KAAKc,QACLF,EAAOiB,iBAAmBJ,QAGvBK,cAAgBrB,EAAST,KAAKc,QAASF,EAAOkB,eAAiBL,QAE/DM,MAAQtB,EAAST,KAAKc,QAASF,EAAOmB,OAASN,QAE/CO,YAAcvB,EAAST,KAAKa,SAAUD,EAAOoB,aAAeP,QAE5DQ,MAAQxB,EAAST,KAAKc,QAASF,EAAOqB,OAASR,QAE/CS,IAAMzB,EAAST,KAAKc,QAASF,EAAOsB,KAAOT,QAE3CU,UAAY1B,EAAST,KAAKc,QAASF,EAAOuB,WAAaV,QAEvDW,QAAU3B,EAAST,KAAKc,QAASF,EAAOwB,SAAWX,QAInDY,UAAY5B,EAAST,KAAKc,QAASF,EAAOyB,WAAaZ,QAEvDa,UAAY7B,EAAST,KAAKc,QAASF,EAAO0B,WAAab,QAEvDc,mBAAqB9B,EACxBT,KAAKc,QACLF,EAAO2B,oBAAsBd,QAG1Be,UAAY/B,EAAST,KAAKc,QAASF,EAAO4B,WAAaf,QAEvDgB,SAAWhC,EAAST,KAAKc,QAASF,EAAO6B,UAAYhB,QAErDiB,YAAcjC,EAAST,KAAKc,QAASF,EAAO8B,aAAejB,QAE3DkB,kBAAoB3C,KAAK4C,UAAU5B,KAAKhB,aAEtCoB,iBAAiB,SAAUpB,KAAK2C,wBAGlCE,MAAQ,UAERC,KAAO,UAEPC,IAAM,UAENC,WAAa,UAEbC,iBAAmB,UAEnBC,eAAiB,UACjBC,aAAe,UACfC,GAAKpD,KAAKqD,GAAKrD,KAAKsD,GAAKtD,KAAKuD,GAAK,UAEnCC,gBAAmBzF,EAAG,KAAMC,EAAG,8CAGhCyF,MACCA,EAAIC,cACJX,IAAMY,KAAKZ,WAEXK,GAAKK,EAAIC,QAAQ,GAAGE,WAEpBN,GAAKG,EAAIC,QAAQ,GAAGG,WAEpBhB,MAAQ7C,KAAK+C,KAAO/C,KAAK8C,MAAQ9C,KAAK+C,UACtCnB,WAAWkC,SAASL,EAAKzD,KAAKc,SACL,OAA1Bd,KAAKwD,eAAezF,SAGjByD,YACHxB,KAAK6C,MAAQ,GACb7C,KAAK6C,OAAS,KACdhF,KAAKkG,IAAI/D,KAAKwD,eAAezF,EAAIiC,KAAKoD,IAAM,IAC5CvF,KAAKkG,IAAI/D,KAAKwD,eAAexF,EAAIgC,KAAKsD,IAAM,GAC1CtD,KAAKwB,aAAawC,aAAahE,KAAKiD,wBAErCO,eAAezF,EAAIiC,KAAKoD,QACxBI,eAAexF,EAAIgC,KAAKsD,QACxBR,KAAO9C,KAAK+C,QAGb1B,EAAOrB,KAAKqB,QACRoC,EAAIC,QAAQxD,OACV,EAAG,MACN+D,sBACAC,uBAEDtG,KACC6F,EAAIC,QAAQ,GAAGE,MAAQ5D,KAAKoD,KAC5BK,EAAIC,QAAQ,GAAGG,MAAQ7D,KAAKsD,MAE5BvF,EAAIH,EAAEG,IACNC,EAAIJ,EAAEI,OAGNsD,cAAgB3D,EAAO0D,QACvBQ,gBAAgBiC,SAASL,EAAKzD,KAAKc,cAGrCqD,aAAc,OAEdjB,eAAiBkB,WACpB,gBACOhC,QAAQ0B,SAASL,EAAKzD,KAAKc,cAC3BqD,aAAc,GACnBnD,KAAKhB,MACP,mCAICyD,MACEA,EAAIC,aACLrC,EAAOrB,KAAKqB,KACdjB,EAAMqD,EAAIC,QAAQxD,OAClBmE,EAAWZ,EAAIC,QAAQ,GAAGE,MAC1BU,EAAWb,EAAIC,QAAQ,GAAGG,cAEvBrC,aAAc,EAEfpB,EAAM,EAAG,KACPmE,EAAYd,EAAIC,QAAQ,GAAGE,MAC7BY,EAAYf,EAAIC,QAAQ,GAAGG,MACzBjG,KACC6F,EAAIC,QAAQ,GAAGE,MAAQS,IACvBZ,EAAIC,QAAQ,GAAGG,MAAQS,GAIb,OAAXjD,EAAKtD,IACHiC,KAAKsB,cAAgB,MAGnBC,KAAO5D,EAAOC,GAAKoC,KAAKsB,mBACvBS,MAAM+B,SAASL,EAAKzD,KAAKc,YAG5B1C,MAAQH,EAAeL,EAAGyD,QACzBK,OAAOoC,SAASL,EAAKzD,KAAKc,YAE5B/C,EAAIH,EAAEG,IACNC,EAAIJ,EAAEI,EAEK,OAAZgC,KAAKqD,IAA4B,OAAbrD,KAAKyE,OACvBC,QAAUL,EAAWrE,KAAKqD,GAAKkB,EAAYvE,KAAKyE,KAAO,IACvDE,QAAUL,EAAWtE,KAAKuD,GAAKiB,EAAYxE,KAAK4E,KAAO,MAEvDF,OAAS,IACTC,OAAS,QAEVpC,mBAAmBuB,SAASL,EAAKzD,KAAKc,cAGtC2D,IAAMF,OAENK,IAAMJ,MACN,IACW,OAAZxE,KAAKqD,GAAa,GAChBqB,OAASL,EAAWrE,KAAKqD,KACzBsB,OAASL,EAAWtE,KAAKuD,OAIzBsB,EAAShH,KAAKkG,IAAI/D,KAAKoD,GAAKpD,KAAKqD,IACnCyB,EAASjH,KAAKkG,IAAI/D,KAAKsD,GAAKtD,KAAKuD,KAE/BsB,EAAS,IAAMC,EAAS,WACrBX,aAAc,UAGjBO,OAAS,IACTC,OAAS,UAGVrC,UAAUwB,SAASL,EAAKzD,KAAKc,SAGhCd,KAAKa,UA5NQ,SAACkE,EAAQC,WACxBC,EAAOD,EAAME,WACF,MAARD,GAAc,IACfA,GAAQF,SACH,IAEFE,EAAKC,kBAEP,EAqNDC,CAAanF,KAAKc,QAASd,KAAKa,WACA,QAAhCb,KAAKa,SAASuE,QAAQC,QACtB5B,EAAI6B,QAAUtF,KAAKa,SACnB,KACM0E,EAAY3G,EAAYoB,KAAKc,SAE7B0E,KACDxF,KAAKa,SAAS4E,WAAazF,KAAKa,SAAStB,YAAc,IACvDS,KAAKa,SAAS6E,UAAY1F,KAAKa,SAASrB,aAAe,GAGtDmG,KACDtB,EAAWmB,EAAOzH,IAClBuG,EAAWkB,EAAOxH,QAGlB2H,EAAM5H,EAAIiC,KAAKoD,KACfuC,EAAM3H,EAAIgC,KAAKsD,SAGfhC,cAAgB3D,EAAO0D,KACxBE,KAAO5D,EAAOgI,GAAS3F,KAAKsB,mBAE3BU,YAAY8B,SAASL,EAAKzD,KAAKa,cAG9B+E,KACDL,EAAUxH,EAAIsG,IACdkB,EAAUvH,EAAIsG,KAGflG,MAAQH,EAAe2H,EAAUvE,KAChCtD,EAAI6H,EAAS7H,IACbC,EAAI4H,EAAS5H,OACb2D,aAAamC,SAASL,EAAKzD,KAAKa,YAEjCgF,uBAIHrD,UAAUsB,SAASL,EAAKzD,KAAKc,cAE7BmD,sBACAZ,GAAKgB,OACLd,GAAKe,EAENlE,EAAM,KACJyF,8CAIJpC,MACGA,EAAIqC,qBAEJ7B,qBACD8B,EAAO/F,KACPyD,EAAIC,QAAQxD,OAAS,SAClB4B,cAAcgC,SAASL,EAAKzD,KAAKc,cACjC2D,IAAMzE,KAAK4E,IAAM,MAMrB5E,KAAKqD,IAAMxF,KAAKkG,IAAI/D,KAAKoD,GAAKpD,KAAKqD,IAAM,IACzCrD,KAAKuD,IAAM1F,KAAKkG,IAAI/D,KAAKsD,GAAKtD,KAAKuD,IAAM,MAEtCyC,UAAYhG,KAAKiG,gBAAgBjG,KAAKoD,GAAIpD,KAAKqD,GAAIrD,KAAKsD,GAAItD,KAAKuD,SAChEJ,aAAeiB,WAAW,aACxBnC,MAAM6B,SAASL,EAAKsC,EAAKjF,UAC7B,UAEEkC,WAAaoB,WAAW,WACtB2B,EAAK5B,eACHjC,IAAI4B,SAASL,EAAKsC,EAAKjF,SAI1BiF,EAAKvE,gBACFW,UAAU2B,SAASL,EAAKsC,EAAKjF,WAC7BU,aAAc,IAEpB,GAGEuE,EAAKvE,gBACHyB,iBAAmBmB,WAAW,aAC5B/B,UAAUyB,SAASL,EAAKsC,EAAKjF,UACjC,YAIF2B,SAASqB,SAASL,EAAKzD,KAAKc,cAE5BO,KAAKtD,EAAI,OACTsD,KAAKrD,EAAI,OACTuD,KAAO,OACPD,cAAgB,UAChB8B,GAAKpD,KAAKqD,GAAKrD,KAAKsD,GAAKtD,KAAKuD,GAAK,+CAGnCY,aAAc,eACNnE,KAAKiD,+BACLjD,KAAKgD,yBACLhD,KAAKkD,6BACLlD,KAAKmD,6CAEbM,QACAb,iBACAF,YAAYoB,SAASL,EAAKzD,KAAKc,+DAGvBd,KAAKkD,wEAGLlD,KAAKiD,0DAGJG,EAAIC,EAAIC,EAAIC,UACnB1F,KAAKkG,IAAIX,EAAKC,IAAOxF,KAAKkG,IAAIT,EAAKC,GACtCH,EAAKC,EAAK,EACR,OACA,QACFC,EAAKC,EAAK,EACV,KACA,kCAGHE,EAAK3D,GACFE,KAAKyD,SACFA,GAAK9C,IAAIb,+BAId2D,EAAK3D,GACHE,KAAKyD,SACFA,GAAKyC,IAAIpG,4CAMZE,KAAKiD,kBAAkBe,aAAahE,KAAKiD,kBACzCjD,KAAKgD,YAAYgB,aAAahE,KAAKgD,YACnChD,KAAKkD,gBAAgBc,aAAahE,KAAKkD,gBACvClD,KAAKmD,cAAca,aAAahE,KAAKmD,mBAGpCrC,QAAQqF,oBAAoB,aAAcnG,KAAKe,YAC/CD,QAAQqF,oBAAoB,YAAanG,KAAKiB,WAC9CH,QAAQqF,oBAAoB,WAAYnG,KAAKkB,UAC7CJ,QAAQqF,oBAAoB,cAAenG,KAAKmB,aAGhDO,OAAOwE,WACPvE,aAAauE,WACbtE,WAAWsE,WACXrE,gBAAgBqE,WAChBpE,cAAcoE,WACdnE,MAAMmE,UACPlE,YAAYkE,WACXjE,MAAMiE,WACNhE,IAAIgE,WACJ/D,UAAU+D,WACV9D,QAAQ8D,WACR7D,UAAU6D,WACV5D,UAAU4D,WACV3D,mBAAmB2D,WACnB1D,UAAU0D,WACVzD,SAASyD,WACTxD,YAAYwD,WAGZ7E,KAAOrB,KAAKsB,cAAgBtB,KAAKuB,KAAOvB,KAAKwB,YAAcxB,KAAK6C,MAAQ7C,KAAK8C,KAAO9C,KAAK+C,IAAM/C,KAAKgD,WAAahD,KAAKiD,iBAAmBjD,KAAKkD,eAAiBlD,KAAKmD,aAAenD,KAAKoD,GAAKpD,KAAKqD,GAAKrD,KAAKsD,GAAKtD,KAAKuD,GAAKvD,KAAKwD,eAAiBxD,KAAK0B,OAAS1B,KAAK2B,aAAe3B,KAAK4B,WAAa5B,KAAK6B,gBAAkB7B,KAAK8B,cAAgB9B,KAAK+B,MAAQ/B,KAAKgC,YAAchC,KAAKiC,MAAQjC,KAAKkC,IAAMlC,KAAKmC,UAAYnC,KAAKoC,QAAUpC,KAAKqC,UAAYrC,KAAKsC,UAAYtC,KAAKwC,UAAYxC,KAAKyC,SAAWzC,KAAK0C,YAAc1C,KAAKuC,mBAAqB,YAEvhB4D,oBAAoB,SAAUnG,KAAK2C,mBACnC"}