{"version":3,"file":"itouch.min.js","sources":["../src/core/itouch.js"],"sourcesContent":["//两个手指触点间直线的距离\n//多指触点操作的时候，v.x表示手指触点之间的水平间距，v.y表示垂直间距，利用勾股定理的公式计算出手指触点之间的直线距离\n//详解：将v.x的水平间距和v.y的垂直间距用直线连接起来，就形成了一个直角三角形的两条垂直边，指触点之间的直线距离就代表直角三角形的斜边\n//那么利用勾股定理公式就可以很容易的计算出斜边的长度，也就是手指触点之间的直线距离\nconst getLen = (v) => {\n  return Math.sqrt(v.x * v.x + v.y * v.y);\n};\n\nconst dot = (v1, v2) => {\n  return v1.x * v2.x + v1.y * v2.y;\n};\n\nconst getAngle = (v1, v2) => {\n  let mr = getLen(v1) * getLen(v2);\n  if (mr === 0) return 0;\n  let r = dot(v1, v2) / mr;\n  if (r > 1) r = 1;\n  return Math.acos(r);\n};\n\n//利用cross结果的正负来判断旋转的方向,如果值大于0，表示方向是逆时针，值小于0，表示方向顺时针\nconst cross = (v1, v2) => {\n  return v1.x * v2.y - v2.x * v1.y;\n};\n\n//利用数学向量求出旋转角度\nconst getRotateAngle = (v1, v2) => {\n  let angle = getAngle(v1, v2);\n  if (cross(v1, v2) > 0) {\n    angle *= -1;\n  }\n  return (angle * 180) / Math.PI;\n};\n\nconst hasHandler = (array) => {\n  return array.dataset.single == \"\";\n};\n\nclass HandlerAdmin {\n  constructor(el) {\n    this.handlers = [];\n    this.el = el;\n  }\n\n  add(handler) {\n    this.handlers.push(handler);\n  }\n\n  del(handler) {\n    if (!handler) this.handlers = [];\n\n    for (let i = this.handlers.length; i >= 0; i--) {\n      if (this.handlers[i] === handler) {\n        this.handlers.splice(i, 1);\n      }\n    }\n  }\n\n  dispatch() {\n    for (let i = 0, len = this.handlers.length; i < len; i++) {\n      let handler = this.handlers[i];\n      if (typeof handler === \"function\") handler.apply(this.el, arguments);\n    }\n  }\n}\n\nconst wrapFunc = (el, handler) => {\n  console.log(el.id);\n  const single = [].slice.call(el.children).some(hasHandler);\n  if (single) {\n    // console.log(document.querySelector(`${el}`));\n  }\n\n  const handlerAdmin = new HandlerAdmin(el);\n  handlerAdmin.add(handler);\n\n  return handlerAdmin;\n};\n\nexport default class AlloyFinger {\n  //el是手势库作用的DOM元素，el的值可以是选择器也可以是DOM元素\n  //option是个数据对象，包含了所有的操作回调函数\n  constructor(el, option) {\n    // console.log(el, option);\n    this.element = typeof el == \"string\" ? document.querySelector(el) : el;\n\n    this.start = this.start.bind(this);\n    this.move = this.move.bind(this);\n    this.end = this.end.bind(this);\n    this.cancel = this.cancel.bind(this);\n    //监听touch事件\n    this.element.addEventListener(\"touchstart\", this.start, false);\n    this.element.addEventListener(\"touchmove\", this.move, false);\n    this.element.addEventListener(\"touchend\", this.end, false);\n    this.element.addEventListener(\"touchcancel\", this.cancel, false);\n\n    //存储两个手指触摸点的位置的间距，水平间距和垂直间距\n    this.preV = { x: null, y: null };\n    //存储多指触摸操作时，手指触点位置之间的距离\n    this.pinchStartLen = null;\n    this.zoom = 1;\n    this.isDoubleTap = false;\n\n    let noop = function () {};\n\n    //旋转操作（多指旋转操作）\n    this.rotate = wrapFunc(this.element, option.rotate || noop);\n    //手指触摸开始\n    this.touchStart = wrapFunc(this.element, option.touchStart || noop);\n    //多指触摸开始\n    this.multipointStart = wrapFunc(\n      this.element,\n      option.multipointStart || noop\n    );\n    //多指触摸结束\n    this.multipointEnd = wrapFunc(this.element, option.multipointEnd || noop);\n    //捏（缩放操作）\n    this.pinch = wrapFunc(this.element, option.pinch || noop);\n    //单指缩放操作\n    this.singlePinch = wrapFunc(this.element, option.singlePinch || noop);\n    //手指划过操作（兼容单个手指操作，多个手指操作）\n    this.swipe = wrapFunc(this.element, option.swipe || noop);\n    //点击操作\n    this.tap = wrapFunc(this.element, option.tap || noop);\n    //双击操作\n    this.doubleTap = wrapFunc(this.element, option.doubleTap || noop);\n    //长按操作\n    this.longTap = wrapFunc(this.element, option.longTap || noop);\n    //点击操作\n    //tap操作和singleTap操作的区别在于，如果是在一定时间内只是单击一次的话，触发的操作顺序是tap->singleTap\n    //如果是在一定时间内连续多次点击的话（包括双击操作），只会执行tap操作，不会执行singleTap操作\n    //singleTap操作其实就类似于鼠标click事件，click事件作用到移动端页面的时候，会存在延时触发事件，会先触发touch事件再执行click事件\n    this.singleTap = wrapFunc(this.element, option.singleTap || noop);\n    //单个手指触摸滑动操作\n    this.pressMove = wrapFunc(this.element, option.pressMove || noop);\n    //两个手指触摸滑动操作\n    this.twoFingerPressMove = wrapFunc(\n      this.element,\n      option.twoFingerPressMove || noop\n    );\n    //触摸滑动\n    this.touchMove = wrapFunc(this.element, option.touchMove || noop);\n    //触摸结束，手指触点离开屏幕\n    this.touchEnd = wrapFunc(this.element, option.touchEnd || noop);\n    //系统原因中断手势操作\n    this.touchCancel = wrapFunc(this.element, option.touchCancel || noop);\n\n    this._cancelAllHandler = this.cancelAll.bind(this);\n\n    window.addEventListener(\"scroll\", this._cancelAllHandler);\n\n    //手指连续按下触摸操作之间的时间间隔\n    this.delta = null;\n    //手指最近一次按下触摸操作时的时间戳\n    this.last = null;\n    //手指按下触摸操作的时间戳\n    this.now = null;\n    //接收点击操作时的定时器返回的值，用于清除定时器\n    this.tapTimeout = null;\n    //接收点击操作时的定时器返回的值，用于清除定时器\n    this.singleTapTimeout = null;\n    //接收长按操作时的定时器返回的值，用于清除定时器\n    this.longTapTimeout = null;\n    this.swipeTimeout = null;\n    this.x1 = this.x2 = this.y1 = this.y2 = null;\n    //用于存储手指触摸操作时的水平坐标和垂直坐标（如果是多指触摸操作，则记录的是第一个手指触摸的位置）\n    this.preTapPosition = { x: null, y: null };\n    // 是否包含单指handle\n    this.singleHandle = null;\n  }\n\n  start(evt) {\n    if (!evt.touches) return;\n    this.now = Date.now();\n    //存储手指触点相对于HTML文档左边沿的的X坐标\n    this.x1 = evt.touches[0].pageX;\n    //存储手指触点相对于HTML文档上边沿的的Y坐标\n    this.y1 = evt.touches[0].pageY;\n    //计算出手指连续按下触摸操作之间的时间间隔\n    this.delta = this.now - (this.last || this.now);\n    this.touchStart.dispatch(evt, this.element);\n    if (this.preTapPosition.x !== null) {\n      //如果手指连续触摸操作之间的时间间隔小于250毫秒，且手指连续触摸操作之间的触点位置水平坐标小于30，\n      //垂直坐标小于30，那么就判定该操作为双击操作\n      this.isDoubleTap =\n        this.delta > 0 &&\n        this.delta <= 250 &&\n        Math.abs(this.preTapPosition.x - this.x1) < 30 &&\n        Math.abs(this.preTapPosition.y - this.y1) < 30;\n      if (this.isDoubleTap) clearTimeout(this.singleTapTimeout);\n    }\n    this.preTapPosition.x = this.x1;\n    this.preTapPosition.y = this.y1;\n    this.last = this.now;\n\n    //获取触摸点的数量\n    let preV = this.preV,\n      len = evt.touches.length;\n    if (len > 1) {\n      this._cancelLongTap();\n      this._cancelSingleTap();\n      //如果是多手指操作的，计算出手指触摸点的位置的间距，水平间距和垂直间距\n      let v = {\n        x: evt.touches[1].pageX - this.x1,\n        y: evt.touches[1].pageY - this.y1,\n      };\n      preV.x = v.x;\n      preV.y = v.y;\n\n      //存储手指触点间的直线距离\n      this.pinchStartLen = getLen(preV);\n      this.multipointStart.dispatch(evt, this.element);\n    }\n    //判断操作是单击还是长按，true为长按操作，false为单击操作\n    this._preventTap = false;\n    //长按时的操作，长按时间750毫秒才会执行\n    this.longTapTimeout = setTimeout(\n      function () {\n        this.longTap.dispatch(evt, this.element);\n        this._preventTap = true;\n      }.bind(this),\n      750\n    );\n  }\n\n  move(evt) {\n    if (!evt.touches) return;\n    let preV = this.preV,\n      len = evt.touches.length,\n      currentX = evt.touches[0].pageX,\n      currentY = evt.touches[0].pageY;\n    //手指滑动的时候，就可以判定当前的操作不是双击了，所以把双击操作的状态设为false\n    this.isDoubleTap = false;\n    //多个手指操作\n    if (len > 1) {\n      let sCurrentX = evt.touches[1].pageX,\n        sCurrentY = evt.touches[1].pageY;\n      let v = {\n        x: evt.touches[1].pageX - currentX,\n        y: evt.touches[1].pageY - currentY,\n      };\n      //多指操作时，且触摸点位置的间距存在，也就是preV.x或者preV.y存在的时候才能执行pinch操作，这个判断条件必须存在\n      //（因为可能存在当多个手指触摸屏幕时，那么存在多个触摸点，但是在滑动操作的同时，只保留了一个手指触摸点，其他手指移开屏幕这样的情况，这种情况就不能执行pinch操作\n      if (preV.x !== null) {\n        if (this.pinchStartLen > 0) {\n          //计算出缩放比例（当前手指触摸点的直线距离 / 上一次滑动之前的手指触摸点的直线距离）\n          evt.zoom = getLen(v) / this.pinchStartLen;\n          this.pinch.dispatch(evt, this.element);\n        }\n        //旋转手势操作\n        evt.angle = getRotateAngle(v, preV);\n        this.rotate.dispatch(evt, this.element);\n      }\n      preV.x = v.x;\n      preV.y = v.y;\n\n      if (this.x2 !== null && this.sx2 !== null) {\n        evt.deltaX = (currentX - this.x2 + sCurrentX - this.sx2) / 2;\n        evt.deltaY = (currentY - this.y2 + sCurrentY - this.sy2) / 2;\n      } else {\n        evt.deltaX = 0;\n        evt.deltaY = 0;\n      }\n      this.twoFingerPressMove.dispatch(evt, this.element);\n\n      //存储在移动操作时第二个手指的X坐标位置\n      this.sx2 = sCurrentX;\n      //存储在移动操作时第二个手指的Y坐标位置\n      this.sy2 = sCurrentY;\n    } else {\n      if (this.x2 !== null) {\n        evt.deltaX = currentX - this.x2;\n        evt.deltaY = currentY - this.y2;\n\n        //move事件中添加对当前触摸点到初始触摸点的判断，\n        //如果曾经大于过某个距离(比如10),就认为是移动到某个地方又移回来，应该不再触发tap事件才对。\n        let movedX = Math.abs(this.x1 - this.x2),\n          movedY = Math.abs(this.y1 - this.y2);\n\n        if (movedX > 10 || movedY > 10) {\n          this._preventTap = true;\n        }\n      } else {\n        evt.deltaX = 0;\n        evt.deltaY = 0;\n      }\n\n      this.pressMove.dispatch(evt, this.element);\n    }\n\n    this.touchMove.dispatch(evt, this.element);\n\n    this._cancelLongTap();\n    this.x2 = currentX;\n    this.y2 = currentY;\n\n    if (len > 1) {\n      evt.preventDefault();\n    }\n  }\n\n  end(evt) {\n    if (!evt.changedTouches) return;\n    //清除长按操作的定时器，取消长按操作\n    this._cancelLongTap();\n    let self = this;\n    if (evt.touches.length < 2) {\n      this.multipointEnd.dispatch(evt, this.element);\n      this.sx2 = this.sy2 = null;\n    }\n\n    //swipe\n    //水平移动间距大于30或者垂直移动间距大于30，就判定为swipe操作\n    if (\n      (this.x2 && Math.abs(this.x1 - this.x2) > 30) ||\n      (this.y2 && Math.abs(this.y1 - this.y2) > 30)\n    ) {\n      evt.direction = this._swipeDirection(this.x1, this.x2, this.y1, this.y2);\n      this.swipeTimeout = setTimeout(function () {\n        self.swipe.dispatch(evt, self.element);\n      }, 0);\n    } else {\n      this.tapTimeout = setTimeout(function () {\n        if (!self._preventTap) {\n          self.tap.dispatch(evt, self.element);\n        }\n        // trigger double tap immediately\n        // 如果是双击操作的话，就执行\n        if (self.isDoubleTap) {\n          self.doubleTap.dispatch(evt, self.element);\n          self.isDoubleTap = false;\n        }\n      }, 0);\n\n      //如果不是双击操作，就会延时250毫秒执行singleTap操作，同时也会执行tap操作，执行顺序是tap->singleTap\n      if (!self.isDoubleTap) {\n        self.singleTapTimeout = setTimeout(function () {\n          self.singleTap.dispatch(evt, self.element);\n        }, 250);\n      }\n    }\n\n    this.touchEnd.dispatch(evt, this.element);\n\n    this.preV.x = 0;\n    this.preV.y = 0;\n    this.zoom = 1;\n    this.pinchStartLen = null;\n    this.x1 = this.x2 = this.y1 = this.y2 = null;\n  }\n  cancelAll() {\n    this._preventTap = true;\n    clearTimeout(this.singleTapTimeout);\n    clearTimeout(this.tapTimeout);\n    clearTimeout(this.longTapTimeout);\n    clearTimeout(this.swipeTimeout);\n  }\n  cancel(evt) {\n    this.cancelAll();\n    this.touchCancel.dispatch(evt, this.element);\n  }\n  _cancelLongTap() {\n    clearTimeout(this.longTapTimeout);\n  }\n  _cancelSingleTap() {\n    clearTimeout(this.singleTapTimeout);\n  }\n  //判定swipe滑动的方向\n  _swipeDirection(x1, x2, y1, y2) {\n    return Math.abs(x1 - x2) >= Math.abs(y1 - y2)\n      ? x1 - x2 > 0\n        ? \"Left\"\n        : \"Right\"\n      : y1 - y2 > 0\n      ? \"Up\"\n      : \"Down\";\n  }\n\n  on(evt, handler) {\n    if (this[evt]) {\n      this[evt].add(handler);\n    }\n  }\n\n  off(evt, handler) {\n    if (this[evt]) {\n      this[evt].del(handler);\n    }\n  }\n\n  destroy() {\n    //清除所有的定时器操作\n    if (this.singleTapTimeout) clearTimeout(this.singleTapTimeout);\n    if (this.tapTimeout) clearTimeout(this.tapTimeout);\n    if (this.longTapTimeout) clearTimeout(this.longTapTimeout);\n    if (this.swipeTimeout) clearTimeout(this.swipeTimeout);\n\n    //解绑所有的监听事件\n    this.element.removeEventListener(\"touchstart\", this.start);\n    this.element.removeEventListener(\"touchmove\", this.move);\n    this.element.removeEventListener(\"touchend\", this.end);\n    this.element.removeEventListener(\"touchcancel\", this.cancel);\n\n    //取消所有的订阅\n    this.rotate.del();\n    this.touchStart.del();\n    this.multipointStart.del();\n    this.multipointEnd.del();\n    this.pinch.del();\n    this.swipe.del();\n    this.tap.del();\n    this.doubleTap.del();\n    this.longTap.del();\n    this.singleTap.del();\n    this.pressMove.del();\n    this.twoFingerPressMove.del();\n    this.touchMove.del();\n    this.touchEnd.del();\n    this.touchCancel.del();\n\n    //自空所有的数据\n    this.preV = this.pinchStartLen = this.zoom = this.isDoubleTap = this.delta = this.last = this.now = this.tapTimeout = this.singleTapTimeout = this.longTapTimeout = this.swipeTimeout = this.x1 = this.x2 = this.y1 = this.y2 = this.preTapPosition = this.rotate = this.touchStart = this.multipointStart = this.multipointEnd = this.pinch = this.swipe = this.tap = this.doubleTap = this.longTap = this.singleTap = this.pressMove = this.touchMove = this.touchEnd = this.touchCancel = this.twoFingerPressMove = null;\n\n    window.removeEventListener(\"scroll\", this._cancelAllHandler);\n    return null;\n  }\n}\n"],"names":["getLen","v","Math","sqrt","x","y","getRotateAngle","v1","v2","angle","mr","r","dot","acos","getAngle","cross","PI","hasHandler","array","dataset","single","HandlerAdmin","el","handlers","handler","push","this","i","length","splice","len","apply","arguments","wrapFunc","log","id","slice","call","children","some","handlerAdmin","add","option","element","document","querySelector","start","bind","move","end","cancel","addEventListener","preV","pinchStartLen","zoom","isDoubleTap","noop","rotate","touchStart","multipointStart","multipointEnd","pinch","singlePinch","swipe","tap","doubleTap","longTap","singleTap","pressMove","twoFingerPressMove","touchMove","touchEnd","touchCancel","_cancelAllHandler","cancelAll","delta","last","now","tapTimeout","singleTapTimeout","longTapTimeout","swipeTimeout","x1","x2","y1","y2","preTapPosition","singleHandle","evt","touches","Date","pageX","pageY","dispatch","abs","clearTimeout","_cancelLongTap","_cancelSingleTap","_preventTap","setTimeout","currentX","currentY","sCurrentX","sCurrentY","sx2","deltaX","deltaY","sy2","movedX","movedY","preventDefault","changedTouches","self","direction","_swipeDirection","del","removeEventListener"],"mappings":"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"}