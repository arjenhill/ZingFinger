{"version":3,"file":"itouch.min.js","sources":["../src/core/itouch.js"],"sourcesContent":["//两个手指触点间直线的距离\n//多指触点操作的时候，v.x表示手指触点之间的水平间距，v.y表示垂直间距，利用勾股定理的公式计算出手指触点之间的直线距离\n//详解：将v.x的水平间距和v.y的垂直间距用直线连接起来，就形成了一个直角三角形的两条垂直边，指触点之间的直线距离就代表直角三角形的斜边\n//那么利用勾股定理公式就可以很容易的计算出斜边的长度，也就是手指触点之间的直线距离\nconst getLen = (v) => {\n  return Math.sqrt(v.x * v.x + v.y * v.y);\n};\n\nconst dot = (v1, v2) => {\n  return v1.x * v2.x + v1.y * v2.y;\n};\n\nconst getAngle = (v1, v2) => {\n  let mr = getLen(v1) * getLen(v2);\n  if (mr === 0) return 0;\n  let r = dot(v1, v2) / mr;\n  if (r > 1) r = 1;\n  return Math.acos(r);\n};\n\n//利用cross结果的正负来判断旋转的方向,如果值大于0，表示方向是逆时针，值小于0，表示方向顺时针\nconst cross = (v1, v2) => {\n  return v1.x * v2.y - v2.x * v1.y;\n};\n\n//利用数学向量求出旋转角度\nconst getRotateAngle = (v1, v2) => {\n  let angle = getAngle(v1, v2);\n  if (cross(v1, v2) > 0) {\n    angle *= -1;\n  }\n  return (angle * 180) / Math.PI;\n};\n\nconst getVector = (p1, p2) => {\n  if (typeof p1 !== \"object\" || typeof p2 !== \"object\") {\n    console.error(\"getvector error!\");\n    return;\n  }\n  let x = Math.round(p1.x - p2.x),\n    y = Math.round(p1.y - p2.y);\n  return { x, y };\n};\n\nclass HandlerAdmin {\n  constructor(el) {\n    this.handlers = [];\n    this.el = el;\n  }\n\n  add(handler) {\n    this.handlers.push(handler);\n  }\n\n  del(handler) {\n    if (!handler) this.handlers = [];\n\n    for (let i = this.handlers.length; i >= 0; i--) {\n      if (this.handlers[i] === handler) {\n        this.handlers.splice(i, 1);\n      }\n    }\n  }\n\n  dispatch() {\n    for (let i = 0, len = this.handlers.length; i < len; i++) {\n      let handler = this.handlers[i];\n      if (typeof handler === \"function\") handler.apply(this.el, arguments);\n    }\n  }\n}\n\nconst wrapEl = (el) => {\n  //el是手势库作用的DOM元素，el的值可以是选择器也可以是DOM元素\n  return typeof el == \"string\" ? document.querySelector(el) : el;\n};\nconst wrapFunc = (el, handler) => {\n  const handlerAdmin = new HandlerAdmin(el);\n  handlerAdmin.add(handler);\n\n  return handlerAdmin;\n};\n\nconst isDescendant = (parent, child) => {\n  let node = child.parentNode;\n  while (node != null) {\n    if (node == parent) {\n      return true;\n    }\n    node = node.parentNode;\n  }\n  return false;\n};\n\nexport default class AlloyFinger {\n  //option是个数据对象，包含了所有的操作回调函数\n  constructor(el, option, handleEl) {\n    this.element = wrapEl(el);\n    this.handleEl = wrapEl(handleEl);\n    this.start = this.start.bind(this);\n    this.move = this.move.bind(this);\n    this.end = this.end.bind(this);\n    this.cancel = this.cancel.bind(this);\n    //监听touch事件\n    this.element.addEventListener(\"touchstart\", this.start, false);\n    this.element.addEventListener(\"touchmove\", this.move, false);\n    this.element.addEventListener(\"touchend\", this.end, false);\n    this.element.addEventListener(\"touchcancel\", this.cancel, false);\n\n    //存储两个手指触摸点的位置的间距，水平间距和垂直间距\n    this.preV = { x: null, y: null };\n    //存储多指触摸操作时，手指触点位置之间的距离\n    this.pinchStartLen = null;\n    this.zoom = 1;\n    this.isDoubleTap = false;\n\n    let noop = function () {};\n\n    //旋转操作（多指旋转操作）\n    this.rotate = wrapFunc(this.element, option.rotate || noop);\n    //旋转操作 (单指)\n    this.singleRotate = wrapFunc(this.handleEl, option.singleRotate || noop);\n    //手指触摸开始\n    this.touchStart = wrapFunc(this.element, option.touchStart || noop);\n    //多指触摸开始\n    this.multipointStart = wrapFunc(\n      this.element,\n      option.multipointStart || noop\n    );\n    //多指触摸结束\n    this.multipointEnd = wrapFunc(this.element, option.multipointEnd || noop);\n    //捏（缩放操作）\n    this.pinch = wrapFunc(this.element, option.pinch || noop);\n    //单指缩放操作\n    this.singlePinch = wrapFunc(this.handleEl, option.singlePinch || noop);\n    //手指划过操作（兼容单个手指操作，多个手指操作）\n    this.swipe = wrapFunc(this.element, option.swipe || noop);\n    //点击操作\n    this.tap = wrapFunc(this.element, option.tap || noop);\n    //双击操作\n    this.doubleTap = wrapFunc(this.element, option.doubleTap || noop);\n    //长按操作\n    this.longTap = wrapFunc(this.element, option.longTap || noop);\n    //点击操作\n    //tap操作和singleTap操作的区别在于，如果是在一定时间内只是单击一次的话，触发的操作顺序是tap->singleTap\n    //如果是在一定时间内连续多次点击的话（包括双击操作），只会执行tap操作，不会执行singleTap操作\n    //singleTap操作其实就类似于鼠标click事件，click事件作用到移动端页面的时候，会存在延时触发事件，会先触发touch事件再执行click事件\n    this.singleTap = wrapFunc(this.element, option.singleTap || noop);\n    //单个手指触摸滑动操作\n    this.pressMove = wrapFunc(this.element, option.pressMove || noop);\n    //两个手指触摸滑动操作\n    this.twoFingerPressMove = wrapFunc(\n      this.element,\n      option.twoFingerPressMove || noop\n    );\n    //触摸滑动\n    this.touchMove = wrapFunc(this.element, option.touchMove || noop);\n    //触摸结束，手指触点离开屏幕\n    this.touchEnd = wrapFunc(this.element, option.touchEnd || noop);\n    //系统原因中断手势操作\n    this.touchCancel = wrapFunc(this.element, option.touchCancel || noop);\n\n    this._cancelAllHandler = this.cancelAll.bind(this);\n\n    window.addEventListener(\"scroll\", this._cancelAllHandler);\n\n    //手指连续按下触摸操作之间的时间间隔\n    this.delta = null;\n    //手指最近一次按下触摸操作时的时间戳\n    this.last = null;\n    //手指按下触摸操作的时间戳\n    this.now = null;\n    //接收点击操作时的定时器返回的值，用于清除定时器\n    this.tapTimeout = null;\n    //接收点击操作时的定时器返回的值，用于清除定时器\n    this.singleTapTimeout = null;\n    //接收长按操作时的定时器返回的值，用于清除定时器\n    this.longTapTimeout = null;\n    this.swipeTimeout = null;\n    this.x1 = this.x2 = this.y1 = this.y2 = null;\n    //用于存储手指触摸操作时的水平坐标和垂直坐标（如果是多指触摸操作，则记录的是第一个手指触摸的位置）\n    this.preTapPosition = { x: null, y: null };\n  }\n\n  start(evt) {\n    if (!evt.touches) return;\n    this.now = Date.now();\n    //存储手指触点相对于HTML文档左边沿的的X坐标\n    this.x1 = evt.touches[0].pageX;\n    //存储手指触点相对于HTML文档上边沿的的Y坐标\n    this.y1 = evt.touches[0].pageY;\n    //计算出手指连续按下触摸操作之间的时间间隔\n    this.delta = this.now - (this.last || this.now);\n    this.touchStart.dispatch(evt, this.element);\n    if (this.preTapPosition.x !== null) {\n      //如果手指连续触摸操作之间的时间间隔小于250毫秒，且手指连续触摸操作之间的触点位置水平坐标小于30，\n      //垂直坐标小于30，那么就判定该操作为双击操作\n      this.isDoubleTap =\n        this.delta > 0 &&\n        this.delta <= 250 &&\n        Math.abs(this.preTapPosition.x - this.x1) < 30 &&\n        Math.abs(this.preTapPosition.y - this.y1) < 30;\n      if (this.isDoubleTap) clearTimeout(this.singleTapTimeout);\n    }\n    this.preTapPosition.x = this.x1;\n    this.preTapPosition.y = this.y1;\n    this.last = this.now;\n\n    //获取触摸点的数量\n    let preV = this.preV,\n      len = evt.touches.length;\n    if (len > 1) {\n      this._cancelLongTap();\n      this._cancelSingleTap();\n      //如果是多手指操作的，计算出手指触摸点的位置的间距，水平间距和垂直间距\n      let v = {\n        x: evt.touches[1].pageX - this.x1,\n        y: evt.touches[1].pageY - this.y1,\n      };\n      preV.x = v.x;\n      preV.y = v.y;\n\n      //存储手指触点间的直线距离\n      this.pinchStartLen = getLen(preV);\n      this.multipointStart.dispatch(evt, this.element);\n    }\n    //判断操作是单击还是长按，true为长按操作，false为单击操作\n    this._preventTap = false;\n    //长按时的操作，长按时间750毫秒才会执行\n    this.longTapTimeout = setTimeout(\n      function () {\n        this.longTap.dispatch(evt, this.element);\n        this._preventTap = true;\n      }.bind(this),\n      750\n    );\n  }\n\n  move(evt) {\n    if (!evt.touches) return;\n    let preV = this.preV,\n      len = evt.touches.length,\n      currentX = evt.touches[0].pageX,\n      currentY = evt.touches[0].pageY;\n    //手指滑动的时候，就可以判定当前的操作不是双击了，所以把双击操作的状态设为false\n    this.isDoubleTap = false;\n    //多个手指操作\n    if (len > 1) {\n      let sCurrentX = evt.touches[1].pageX,\n        sCurrentY = evt.touches[1].pageY;\n      let v = {\n        x: evt.touches[1].pageX - currentX,\n        y: evt.touches[1].pageY - currentY,\n      };\n      //多指操作时，且触摸点位置的间距存在，也就是preV.x或者preV.y存在的时候才能执行pinch操作，这个判断条件必须存在\n      //（因为可能存在当多个手指触摸屏幕时，那么存在多个触摸点，但是在滑动操作的同时，只保留了一个手指触摸点，其他手指移开屏幕这样的情况，这种情况就不能执行pinch操作\n      if (preV.x !== null) {\n        if (this.pinchStartLen > 0) {\n          //计算出缩放比例（当前手指触摸点的直线距离 / 上一次滑动之前的手指触摸点的直线距离）\n          // console.log(this.pinchStartLen);\n          console.log(v);\n          evt.zoom = getLen(v) / this.pinchStartLen;\n          this.pinch.dispatch(evt, this.element);\n        }\n        //旋转手势操作\n        // console.log(preV);\n        evt.angle = getRotateAngle(v, preV);\n        this.rotate.dispatch(evt, this.element);\n      }\n      preV.x = v.x;\n      preV.y = v.y;\n\n      if (this.x2 !== null && this.sx2 !== null) {\n        evt.deltaX = (currentX - this.x2 + sCurrentX - this.sx2) / 2;\n        evt.deltaY = (currentY - this.y2 + sCurrentY - this.sy2) / 2;\n      } else {\n        evt.deltaX = 0;\n        evt.deltaY = 0;\n      }\n      this.twoFingerPressMove.dispatch(evt, this.element);\n\n      //存储在移动操作时第二个手指的X坐标位置\n      this.sx2 = sCurrentX;\n      //存储在移动操作时第二个手指的Y坐标位置\n      this.sy2 = sCurrentY;\n    } else {\n      if (this.x2 !== null) {\n        evt.deltaX = currentX - this.x2;\n        evt.deltaY = currentY - this.y2;\n\n        //move事件中添加对当前触摸点到初始触摸点的判断，\n        //如果曾经大于过某个距离(比如10),就认为是移动到某个地方又移回来，应该不再触发tap事件才对。\n        let movedX = Math.abs(this.x1 - this.x2),\n          movedY = Math.abs(this.y1 - this.y2);\n\n        if (movedX > 10 || movedY > 10) {\n          this._preventTap = true;\n        }\n      } else {\n        evt.deltaX = 0;\n        evt.deltaY = 0;\n      }\n\n      this.pressMove.dispatch(evt, this.element);\n      // 判断是否有handleElement\n      if (\n        this.handleEl &&\n        isDescendant(this.element, this.handleEl) &&\n        this.handleEl.dataset.single == \"true\" &&\n        evt.target == this.handleEl\n      ) {\n        const rect = this.element.getBoundingClientRect();\n        const rectV = getVector(\n          {\n            x: currentX,\n            y: currentY,\n          },\n          { x: rect.left, y: rect.top }\n        );\n\n        const preV = getVector(rectV, {\n          x: this.x1,\n          y: this.y1,\n        });\n\n        this.pinchStartLen = getLen(preV);\n        evt.zoom = getLen(rectV) / this.pinchStartLen;\n\n        this.singlePinch.dispatch(evt, this.handleEl);\n        this.singleRotate.dispatch(evt, this.handleEl);\n      }\n    }\n\n    this.touchMove.dispatch(evt, this.element);\n\n    this._cancelLongTap();\n    this.x2 = currentX;\n    this.y2 = currentY;\n\n    if (len > 1) {\n      evt.preventDefault();\n    }\n  }\n\n  end(evt) {\n    if (!evt.changedTouches) return;\n    //清除长按操作的定时器，取消长按操作\n    this._cancelLongTap();\n    let self = this;\n    if (evt.touches.length < 2) {\n      this.multipointEnd.dispatch(evt, this.element);\n      this.sx2 = this.sy2 = null;\n    }\n\n    //swipe\n    //水平移动间距大于30或者垂直移动间距大于30，就判定为swipe操作\n    if (\n      (this.x2 && Math.abs(this.x1 - this.x2) > 30) ||\n      (this.y2 && Math.abs(this.y1 - this.y2) > 30)\n    ) {\n      evt.direction = this._swipeDirection(this.x1, this.x2, this.y1, this.y2);\n      this.swipeTimeout = setTimeout(function () {\n        self.swipe.dispatch(evt, self.element);\n      }, 0);\n    } else {\n      this.tapTimeout = setTimeout(function () {\n        if (!self._preventTap) {\n          self.tap.dispatch(evt, self.element);\n        }\n        // trigger double tap immediately\n        // 如果是双击操作的话，就执行\n        if (self.isDoubleTap) {\n          self.doubleTap.dispatch(evt, self.element);\n          self.isDoubleTap = false;\n        }\n      }, 0);\n\n      //如果不是双击操作，就会延时250毫秒执行singleTap操作，同时也会执行tap操作，执行顺序是tap->singleTap\n      if (!self.isDoubleTap) {\n        self.singleTapTimeout = setTimeout(function () {\n          self.singleTap.dispatch(evt, self.element);\n        }, 250);\n      }\n    }\n\n    this.touchEnd.dispatch(evt, this.element);\n\n    this.preV.x = 0;\n    this.preV.y = 0;\n    this.zoom = 1;\n    this.pinchStartLen = null;\n    this.x1 = this.x2 = this.y1 = this.y2 = null;\n  }\n  cancelAll() {\n    this._preventTap = true;\n    clearTimeout(this.singleTapTimeout);\n    clearTimeout(this.tapTimeout);\n    clearTimeout(this.longTapTimeout);\n    clearTimeout(this.swipeTimeout);\n  }\n  cancel(evt) {\n    this.cancelAll();\n    this.touchCancel.dispatch(evt, this.element);\n  }\n  _cancelLongTap() {\n    clearTimeout(this.longTapTimeout);\n  }\n  _cancelSingleTap() {\n    clearTimeout(this.singleTapTimeout);\n  }\n  //判定swipe滑动的方向\n  _swipeDirection(x1, x2, y1, y2) {\n    return Math.abs(x1 - x2) >= Math.abs(y1 - y2)\n      ? x1 - x2 > 0\n        ? \"Left\"\n        : \"Right\"\n      : y1 - y2 > 0\n      ? \"Up\"\n      : \"Down\";\n  }\n\n  on(evt, handler) {\n    if (this[evt]) {\n      this[evt].add(handler);\n    }\n  }\n\n  off(evt, handler) {\n    if (this[evt]) {\n      this[evt].del(handler);\n    }\n  }\n\n  destroy() {\n    //清除所有的定时器操作\n    if (this.singleTapTimeout) clearTimeout(this.singleTapTimeout);\n    if (this.tapTimeout) clearTimeout(this.tapTimeout);\n    if (this.longTapTimeout) clearTimeout(this.longTapTimeout);\n    if (this.swipeTimeout) clearTimeout(this.swipeTimeout);\n\n    //解绑所有的监听事件\n    this.element.removeEventListener(\"touchstart\", this.start);\n    this.element.removeEventListener(\"touchmove\", this.move);\n    this.element.removeEventListener(\"touchend\", this.end);\n    this.element.removeEventListener(\"touchcancel\", this.cancel);\n\n    //取消所有的订阅\n    this.rotate.del();\n    this.touchStart.del();\n    this.multipointStart.del();\n    this.multipointEnd.del();\n    this.pinch.del();\n    this.swipe.del();\n    this.tap.del();\n    this.doubleTap.del();\n    this.longTap.del();\n    this.singleTap.del();\n    this.pressMove.del();\n    this.twoFingerPressMove.del();\n    this.touchMove.del();\n    this.touchEnd.del();\n    this.touchCancel.del();\n\n    //自空所有的数据\n    this.preV = this.pinchStartLen = this.zoom = this.isDoubleTap = this.delta = this.last = this.now = this.tapTimeout = this.singleTapTimeout = this.longTapTimeout = this.swipeTimeout = this.x1 = this.x2 = this.y1 = this.y2 = this.preTapPosition = this.rotate = this.touchStart = this.multipointStart = this.multipointEnd = this.pinch = this.swipe = this.tap = this.doubleTap = this.longTap = this.singleTap = this.pressMove = this.touchMove = this.touchEnd = this.touchCancel = this.twoFingerPressMove = null;\n\n    window.removeEventListener(\"scroll\", this._cancelAllHandler);\n    return null;\n  }\n}\n"],"names":["getLen","v","Math","sqrt","x","y","getRotateAngle","v1","v2","angle","mr","r","dot","acos","getAngle","cross","PI","getVector","p1","p2","round","error","HandlerAdmin","el","handlers","handler","push","this","i","length","splice","len","apply","arguments","wrapEl","document","querySelector","wrapFunc","handlerAdmin","add","option","handleEl","element","start","bind","move","end","cancel","addEventListener","preV","pinchStartLen","zoom","isDoubleTap","noop","rotate","singleRotate","touchStart","multipointStart","multipointEnd","pinch","singlePinch","swipe","tap","doubleTap","longTap","singleTap","pressMove","twoFingerPressMove","touchMove","touchEnd","touchCancel","_cancelAllHandler","cancelAll","delta","last","now","tapTimeout","singleTapTimeout","longTapTimeout","swipeTimeout","x1","x2","y1","y2","preTapPosition","evt","touches","Date","pageX","pageY","dispatch","abs","clearTimeout","_cancelLongTap","_cancelSingleTap","_preventTap","setTimeout","currentX","currentY","sCurrentX","sCurrentY","log","sx2","deltaX","deltaY","sy2","movedX","movedY","parent","child","node","parentNode","isDescendant","dataset","single","target","rect","getBoundingClientRect","rectV","left","top","preventDefault","changedTouches","self","direction","_swipeDirection","del","removeEventListener"],"mappings":"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"}